METODOS

nota: SI QUIERES EJECUTAR UN METODO, TIENES QUE LLAMARLO
NOTA2: UN METODO SOLO PUEDE DEVOLVER UN PARAMETRO 

SOBRECARGA DE METODOS:
La sobrecarga de métodos es la capacidad de tener dos o más métodos 
con el mismo nombre en la misma clase, pero con diferentes 
parámetros. Esto le permite crear métodos que realizan 
la misma tarea, pero con diferentes argumentos. 

SINTAXIS

ReturnType nameOfMetodo(){
	//cuerpo del metodo
}

//void es para cuando no queremos recivir un valor

jshell> void helloWorld(){
   ...>     System.out.println("Hello World");
   ...>     System.out.println("Hello World");
   ...> }
|  created method helloWorld()

declara= dar un nombre
definir= especificar lo que hace


INVOCAR UN METODO, LLAMAR UN METODO, O EJECUTAR UN METODO

jshell> helloWorld()
Hello World
Hello World


jshell> void sayHelloWorldThrice(){
   ...>     System.out.println("Hola Wilson");
   ...> }
|  created method sayHelloWorldThrice()

jshell> sayHelloWorldThrice()
Hola Wilson

jshell> void loveMethod(){
   ...>     System.out.println("i´ve created my first variable");
   ...>     System.out.println("i´ve created my first method");
   ...>     System.out.println("i´ve created my first loop");
   ...>     System.out.println("i´m exited to learn java");
   ...> }
|  created method loveMethod()

jshell> loveMethod()
i┤ve created my first variable
i┤ve created my first method
i┤ve created my first loop
i┤m exited to learn java


LISTA DE METODOS

jshell> /methods
|    void helloWorld()
|    void sayHelloWorldThrice()
|    void loveMethod()



METODOS
Sintaxis.

ReturnType nameOfMetodo(Type argumentName){
	//cuerpo del metodo
}

void sayHelloWorld(int noOfTimes){
	//cuerpo del metodo
}


jshell> /list helloWorld

  45 : void helloWorld(){
           System.out.println("Hello World");
           System.out.println("Hello World");
       }
  58 : void helloWorld(int number){
           for(i = 1; i<=number; i++){
        System.out.println("Hello World");
           }

       }


jshell> /edit helloWorld
|  modified method helloWorld(int)

jshell> helloWorld(6)
Hello World
Hello World
Hello World
Hello World
Hello World
Hello World


EJERCICIO 7

void printNumbers(int n){
           for(i=1; i<=n; i++){
               System.out.printf("el numero es:%d ", i).println();
           }
       }

jshell> printNumbers(10)
el numero es:1
el numero es:2
el numero es:3
el numero es:4
el numero es:5
el numero es:6
el numero es:7
el numero es:8
el numero es:9
el numero es:10


 void printSquaresOfNumbers(int n){
           for(i = 1; i<=n; i++){
               System.out.printf("%d", i*i).println();
           }
       }


printSquaresOfNumbers(20)
1
4
9
16
25
36
49
64
81
100
121
144
169
196
225
256
289
324
361
400



jshell> void printMultiplicationTable(int n){
   ...>     for(i=1; i<=12; i++){
   ...>        System.out.printf("%d * %d = %d", table, i, table * i).println();
   ...>     }
   ...> }
|  created method printMultiplicationTable(int)


jshell> table =8
table ==> 8

jshell> printMultiplicationTable(4)
8 * 1 = 8
8 * 2 = 16
8 * 3 = 24
8 * 4 = 32
8 * 5 = 40
8 * 6 = 48
8 * 7 = 56
8 * 8 = 64
8 * 9 = 72
8 * 10 = 80
8 * 11 = 88
8 * 12 = 96



jshell> /list printMultiplicationTable

  78 : void printMultiplicationTable(){
           for(i=1; i<=12; i++){
              System.out.printf("%d * %d = %d", 5, i, 5 * i).println();
           }
       }
  80 : void printMultiplicationTable(int table){
           for(i=1; i<=12; i++){
              System.out.printf("%d * %d = %d", table, i, table * i).println();
           }
       }


jshell> printMultiplicationTable()
5 * 1 = 5
5 * 2 = 10
5 * 3 = 15
5 * 4 = 20
5 * 5 = 25
5 * 6 = 30
5 * 7 = 35
5 * 8 = 40
5 * 9 = 45
5 * 10 = 50
5 * 11 = 55
5 * 12 = 60

jshell> printMultiplicationTable(6)
6 * 1 = 6
6 * 2 = 12
6 * 3 = 18
6 * 4 = 24
6 * 5 = 30
6 * 6 = 36
6 * 7 = 42
6 * 8 = 48
6 * 9 = 54
6 * 10 = 60
6 * 11 = 66
6 * 12 = 72


METODO CON MULTIPLES PARAMETROS

jshell> void sumarNumbers(int i,int j){
   ...>    int  sum = i+j;
   ...>     System.out.println(sum);
   ...> }
|  modified method sumarNumbers(int,int)
jshell> sumarNumbers(5,8)
13

jshell> sumarNumbers(5,9)
14


jshell> void sumar(int i,int j, int k){
   ...>    int  sum = i + j + k;
   ...>     System.out.println(sum);
   ...> }
|  created method sumar(int,int,int)

jshell> sumar(8, 9, 6)
23


METODOS QUE DEVUELBEN VALORES
jshell> int sumarNumbers(int i, int j){
   ...>     int sum = i + j;
   ...>     return sum;
   ...> }
|  created method sumarNumbers(int,int)

jshell> int sum = sumarNumbers(45, 18)
sum ==> 63


EJERCICIOS DE RETORNOS DE VALRES CON METODOS.

jshell> int sumaTresNumbers(int a, int b, int c){
   ...>     int sum = a + b + c;
   ...>     return sum;
   ...> }
|  created method sumaTresNumbers(int,int,int)

jshell> int sum = sumaTresNumbers(4,5,6)
sum ==> 15



jshell> int angleTriangulo(int x, int y){
   ...>     int ecuacion = 180-(x + y);
   ...>     return ecuacion;
   ...> }
|  created method angleTriangulo(int,int)


jshell> int angles = angleTriangulo(45, 70)
angles ==> 65
